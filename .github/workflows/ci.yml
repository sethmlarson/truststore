name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "7 5 * * *"

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: "1"

jobs:
  lint:
    runs-on: ubuntu-latest
    name: "Lint"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: 3.x
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, windows-latest, ubuntu-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14-dev", "pypy3.10"]

    runs-on: ${{ matrix.os }}
    name: ${{ fromJson('{"macos-14":"macOS","windows-latest":"Windows","ubuntu-latest":"Ubuntu"}')[matrix.os] }} Python ${{ matrix.python-version }}
    continue-on-error: false
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: 1.x

      - name: Install mkcert on macOS
        if: runner.os == 'macOS'
        run: |
          go install filippo.io/mkcert@v1.4.4
          # for non-interactive install of root CA
          sudo security authorizationdb write com.apple.trust-settings.admin allow
          mkcert -install

      - name: Install mkcert on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          go install filippo.io/mkcert@v1.4.4
          sudo apt-get install libnss3-tools
          mkcert -install

      - name: Run tests
        run: |
          python -m pip install nox
          nox -s test

  compileall:
    # Run 'python -m compileall' on an old Python version
    # to ensure that pip can vendor truststore successfully.
    runs-on: ubuntu-22.04 # pin to 22.04, as with 24.04 Python 3.7 is no longer available
    name: compileall
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.7"
      - run: |
          python -m compileall -qq -f src/truststore/

  integration-pip:
    runs-on: ubuntu-latest
    name: Integration pip
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          path: truststore

      - name: Checkout pypa/pip
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          repository: pypa/pip
          path: pip

      - name: Setup Python 3.11
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: "3.11"

      - name: Patch tests to install local copy of truststore
        working-directory: "${{ github.workspace }}/pip"
        run: |
          sed -i 's|script.pip("install", "truststore")|script.pip("install", "${{ github.workspace }}/truststore")|' tests/functional/test_truststore.py

      - name: Run tests
        working-directory: "${{ github.workspace }}/pip"
        run: |
          python -m pip install nox
          nox -s test-3.11 -- \
            -m integration \
            tests/functional/test_truststore.py

      - name: Run pip debug
        working-directory: "${{ github.workspace }}/pip"
        run: |
          python -m pip install -e .
          python -m pip debug
